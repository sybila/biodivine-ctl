---

# The name of performed experiment.
# If not specified, name of the config file will be used instead.
experiment: "frontend-testing"

# If set to true, experiment folder will contain information about the build.
printBuildInfo: true  # default true

# If set to true, experiment folder will contain information about the 
# operating system, memory, number of cores, etc.
printEnvironmentInfo: true # default true

# log level that should be printed to console
# (Everything lower will be printed only into files)
consoleLogLevel: info # all/error/warning/info/fine/finer/finest/off, default info 

# Here you can specify a list of tasks you want to perform.
# Right now, only supported task type is ctlParamEstimation,
# future plan is to have things like odeModelAbstraction or 
# symba in separate tasks with chainable results.
tasks:

  - type: ctlParamEstimation # default ctlParamEstimation

    # Timeout in seconds for this task. Negative value means no timeout.
    timeout: 3600   #default -1  
    # number of concurrent processes
    workers: 4  # default 1
    # maximal memory per worker in megabytes
    maxMemory: 1024 # default 1024
    # Type of job queue. Only single thread supported for now.
    jobQueue: SingleThreadJobQueue  # default SingleThreadJobQueue
    # Type of communicator. Only shared memory supported for now.
    communicator: SharedMemoryCommunicator # default SharedMemoryCommunicator
    partitioning: block # uniform/slice/hash/block, default uniform      
    #if you use block partitioning, you can set additional property: blockSize - default is 100
    blockSize: 10

    checker:
      # type of results that should be printed. 
      # size - only print size of the result set // log 
      # stats - additional info about process // log
      # human - print valid states in human readable format // only file   
      results: ["size", "stats", "human"] # default []
      logLevel: error

    # Ctl parser settings. 
    ctlParser:
      # optimize formulas after parsing and normalizing (remove double negation, etc.)
      optimize: true # default true
      # normalize to standard set of operators
      normalForm: until # default until (EU/AU/EX/&&/||/!), use none to disable normalization
      # parser log level
      logLevel: info

    # You can give list of several properties, each will be verified in specified order
    # A copy of the property will be also included in results
    properties: 
      # You can use "inlined" formulas
      - formula: "pRB > 3.0 EU E2F1 > 6"
      # You can specify a list of property by name from a file
      - file: "test_prop.ctl"
        verify: "bistab"
      # You can use a hybrid notation - referencing formulas defined in a file, 
      # but ultimately verifying an inlined formula
      - file: "test_prop.ctl"
        formula: "pRB > 3.0 EU lowStable"

    # Here you should specify your model. For now, only supported model type is ODE.
    # A serialized model will be also included in results.
    model:
      type: ODE
      #Model file path
      file: "tcbb.bio"
      # Use faster, but less precise approximation method
      fastApproximation: true # default false
      # Cut off autogenerated thresholds that exceed specified model bounds
      cutToRange: false # default false



